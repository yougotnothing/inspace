services:
  postgres:
    container_name: postgres
    volumes:
      - pg:/var/lib/postgresql/data
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432

  geo:
    container_name: geo-service-py
    build:
      context: ./geo
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    env_file:
      - .env
    environment:
      - USER_AGENT=${USER_AGENT}
      - DEEPL_API_KEY=${DEEPL_API_KEY}

  nestjs-api:
    container_name: inspace-api
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/api
      - /api/node_modules
    ports:
      - 5174:5174
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - geo
    tty: true
    stdin_open: true

  react-app:
    container_name: react-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    ports:
      - 5173:5173
    environment:
      - VITE_HMR_PORT=${VITE_HMR_PORT}
      - VITE_HMR_HOST=${VITE_HMR_HOST}
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
    tty: true

volumes:
  pg:
  node_modules:
  api:
  frontend:
