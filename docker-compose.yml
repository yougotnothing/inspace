services:
  postgres:
    container_name: postgres
    volumes:
      - pg:/var/lib/postgresql/data
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
      - 5433:5433

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:22.0.5
    ports:
      - 8080:8080
    volumes:
      - keycloak_data:/data
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_ADMIN: ${KC_BOOTSTRAP_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
    restart: unless-stopped
    command: start-dev
    depends_on:
      - postgres

  geo:
    container_name: geo-service-py
    build:
      context: ./python
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    environment:
      GEONAMES_API_URL: ${GEONAMES_API_URL}
      GEONAMES_API_KEY: ${GEONAMES_API_KEY}
      KC_SERVER_URL: ${KC_SERVER_URL}
      KC_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME}
      KC_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
      KC_REALM: ${KC_REALM}
      KC_CLIENT_ID: ${KC_CLIENT_ID}
      KC_SECRET: ${KC_SECRET}
      KC_AUTH_URL: ${KC_AUTH_SERVER_URL}
      KC_OPENID_REDIRECT_URI: ${KC_OPENID_REDIRECT_URI}
      KC_OPENID_SCOPE: ${KC_OPENID_SCOPE}
      KC_OPENID_STATE: ${KC_OPENID_STATE}
    depends_on:
      - keycloak

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis:/data

  minio:
    container_name: minio
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address :9001

  nestjs-api:
    container_name: inspace-api
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/api
      - /api/node_modules
    ports:
      - 5174:5174
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      GEO_URL: ${GEO_URL}
      AIR_POLLUTION_API_KEY: ${AIR_POLLUTION_API_KEY}
      AIR_POLLUTION_API_URL: ${AIR_POLLUTION_API_URL}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_END_POINT: ${MINIO_END_POINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
    tty: true
    stdin_open: true

  react-app:
    container_name: react-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    ports:
      - 5173:5173
    environment:
      VITE_HMR_PORT: ${VITE_HMR_PORT}
      VITE_HMR_HOST: ${VITE_HMR_HOST}
      CHOKIDAR_USEPOLLING: ${CHOKIDAR_USEPOLLING}
      API_URL: http://nestjs-api:5174/
      GRAPHQL_SERVER_URI: ${GRAPHQL_SERVER_URI}
      VITE_GITHUB_URL: ${VITE_GITHUB_URL}
      VITE_TELEGRAM_URL: ${VITE_TELEGRAM_URL}
      VITE_INSTAGRAM_URL: ${VITE_INSTAGRAM_URL}
    tty: true
    depends_on:
      - postgres
      - nestjs-api
      - redis
      - minio

volumes:
  keycloak_data:
  pg:
  node_modules:
  api:
  frontend:
  redis:
    driver: local
  minio:
    driver: local
